---
import { Icon } from 'astro-icon/components';

const heroSlides = [
  {
    title: 'Explore Our Exquisite Collections',
    description: 'Discover a world of premium Indian handicrafts curated with passion and precision.',
    backgroundImage: 'https://globalcrafts.in/assets/img/slide/slider5.jpg',
    buttonText: 'Explore Collections',
    buttonLink: '/products',
  },
  {
    title: 'Our Craftsmanship, Our Story',
    description: 'Two decades of innovation, quality, and dedication to exceptional artisan work.',
    backgroundImage: 'https://globalcrafts.in/assets/img/slide/slider2.jpg',
    buttonText: 'Read About Our Journey',
    buttonLink: '/about',
  },
  {
    title: "Let's Connect and Create",
    description: 'Reach out to us if you want to know more.',
    backgroundImage: 'https://globalcrafts.in/assets/img/slide/slider3.jpg',
    buttonText: 'Contact Us',
    buttonLink: '/contact',
  },
];
---

<div id="hero-carousel" class="relative w-full h-[600px] overflow-hidden">
  {
    heroSlides.map((slide, index) => (
      <div
        data-slide={index}
        class={`absolute inset-0 transition-all duration-1000 ease-in-out ${
          index === 0 ? 'opacity-100 pointer-events-auto z-10' : 'opacity-0 pointer-events-none z-0'
        }`}
        style={`background-image: url(${slide.backgroundImage}); background-size: cover; background-position: center;`}
      >
        <div class="absolute inset-0 bg-black bg-opacity-50 flex items-center justify-center">
          <div class="text-center text-white max-w-2xl px-4">
            <h1 class="text-5xl font-bold mb-4 highlight">{slide.title}</h1>
            <p class="text-xl mb-6">{slide.description}</p>
            <a
              href={slide.buttonLink}
              class="bg-blue-600 hover:bg-blue-700 text-white font-bold py-3 px-6 rounded-md cursor-pointer transition duration-300"
            >
              {slide.buttonText}
            </a>
          </div>
        </div>
      </div>
    ))
  }

  <!-- Navigation Buttons -->
  <button
    id="prev-slide"
    class="absolute left-4 top-1/2 -translate-y-1/2 bg-white/30 hover:bg-white/50 rounded-md p-2 transition z-10"
  >
    <Icon name="tabler:chevron-left" class="w-8 h-8 text-white" />
  </button>

  <button
    id="next-slide"
    class="absolute right-4 top-1/2 -translate-y-1/2 bg-white/30 hover:bg-white/50 rounded-md p-2 transition z-10"
  >
    <Icon name="tabler:chevron-right" class="w-8 h-8 text-white" />
  </button>

  <!-- Slide Indicators -->
  <div class="absolute bottom-4 left-1/2 -translate-x-1/2 flex space-x-2 z-10">
    {
      heroSlides.map((_, index) => (
        <button
          data-indicator={index}
          class={`w-3 h-3 rounded-full transition-all duration-300 ${index === 0 ? 'bg-white w-6' : 'bg-white/50'}`}
        />
      ))
    }
  </div>
</div>

<script>
  document.addEventListener('astro:page-load', () => {
    const carousel = document.getElementById('hero-carousel');
    const slides = carousel?.querySelectorAll('[data-slide]');
    const indicators = carousel?.querySelectorAll('[data-indicator]');
    const prevButton = document.getElementById('prev-slide');
    const nextButton = document.getElementById('next-slide');

    let currentSlide = 0;
    let autoSlideInterval: number;

    function resetAutoSlide() {
      // Clear any existing interval
      if (autoSlideInterval) {
        clearInterval(autoSlideInterval);
      }

      // Start a new interval
      autoSlideInterval = setInterval(nextSlide, 5000) as unknown as number;
    }

    function showSlide(index: number) {
      // Reset all slides and indicators
      slides?.forEach((slide, i) => {
        slide.classList.toggle('opacity-100', i === index);
        slide.classList.toggle('opacity-0', i !== index);
        slide.classList.toggle('pointer-events-auto', i === index);
        slide.classList.toggle('pointer-events-none', i !== index);
        slide.classList.toggle('z-10', i === index);
        slide.classList.toggle('z-0', i !== index);
      });

      indicators?.forEach((indicator, i) => {
        indicator.classList.toggle('bg-white', i === index);
        indicator.classList.toggle('w-6', i === index);
        indicator.classList.toggle('bg-white/50', i !== index);
      });

      currentSlide = index;
    }

    function nextSlide() {
      const newIndex = (currentSlide + 1) % (slides?.length ?? 1);
      showSlide(newIndex);
      resetAutoSlide();
    }

    function prevSlide() {
      const newIndex = currentSlide === 0 ? (slides?.length ?? 1) - 1 : currentSlide - 1;
      showSlide(newIndex);
      resetAutoSlide();
    }

    // Initial auto-slide setup
    resetAutoSlide();

    // Event listeners
    nextButton?.addEventListener('click', nextSlide);
    prevButton?.addEventListener('click', prevSlide);

    // Indicator clicks
    indicators?.forEach((indicator, index) => {
      indicator.addEventListener('click', () => {
        showSlide(index);
        resetAutoSlide();
      });
    });
  });

  console.log('loaded');
</script>
